import{a5 as d,p as l,ah as p,h as _,a9 as I}from"./index.c04da044.js";function g(e,n){if(!d)return;const s=n.modifiers||{},t=n.value,{handler:o,options:a}=typeof t=="object"?t:{handler:t,options:{}},r=new IntersectionObserver(function(){var u;let v=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],m=arguments.length>1?arguments[1]:void 0;const i=(u=e._observe)==null?void 0:u[n.instance.$.uid];if(!i)return;const c=v.some(b=>b.isIntersecting);o&&(!s.quiet||i.init)&&(!s.once||c||i.init)&&o(c,v,m),c&&s.once?f(e,n):i.init=!0},a);e._observe=Object(e._observe),e._observe[n.instance.$.uid]={init:!1,observer:r},r.observe(e)}function f(e,n){var s;const t=(s=e._observe)==null?void 0:s[n.instance.$.uid];!t||(t.observer.unobserve(e),delete e._observe[n.instance.$.uid])}const h={mounted:g,unmounted:f},y=h,T=l({transition:{type:[Boolean,String,Object],default:"fade-transition",validator:e=>e!==!0}},"transition"),O=(e,n)=>{let{slots:s}=n;const{transition:t,...o}=e,{component:a=I,...r}=typeof t=="object"?t:{};return p(a,_(typeof t=="string"?{name:t}:r,o),s)};export{y as I,O as M,T as m};
